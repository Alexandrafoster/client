{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProjectService = /*#__PURE__*/(() => {\n  class ProjectService {\n    /**\n     * Constructor\n     */\n    constructor(_httpClient) {\n      this._httpClient = _httpClient;\n      this._data = new BehaviorSubject(null);\n    } // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Getter for data\n     */\n\n\n    get data$() {\n      return this._data.asObservable();\n    } // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Get data\n     */\n\n\n    getData() {\n      return this._httpClient.get('api/dashboards/project').pipe(tap(response => {\n        this._data.next(response);\n      }));\n    }\n\n  }\n\n  ProjectService.ɵfac = function ProjectService_Factory(t) {\n    return new (t || ProjectService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ProjectService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProjectService,\n    factory: ProjectService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProjectService;\n})();","map":null,"metadata":{},"sourceType":"module"}